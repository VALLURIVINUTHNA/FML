{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPyh/DPbtAUFK5UJr7d34+Z",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/VALLURIVINUTHNA/FML/blob/main/EDA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VVnx3IKOLnTe"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data=pd.read_csv(\"/content/pseudo_facebook.csv\")"
      ],
      "metadata": {
        "id": "pdBTyuz3OLd4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 268
        },
        "id": "qffiBLN1OUwC",
        "outputId": "a301da53-c949-4e79-aa45-7000453e7a53"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    userid  age  dob_day  dob_year  dob_month  gender  tenure  friend_count  \\\n",
              "0  2094382   14       19      1999         11    male   266.0             0   \n",
              "1  1192601   14        2      1999         11  female     6.0             0   \n",
              "2  2083884   14       16      1999         11    male    13.0             0   \n",
              "3  1203168   14       25      1999         12  female    93.0             0   \n",
              "4  1733186   14        4      1999         12    male    82.0             0   \n",
              "\n",
              "   friendships_initiated  likes  likes_received  mobile_likes  \\\n",
              "0                      0      0               0             0   \n",
              "1                      0      0               0             0   \n",
              "2                      0      0               0             0   \n",
              "3                      0      0               0             0   \n",
              "4                      0      0               0             0   \n",
              "\n",
              "   mobile_likes_received  www_likes  www_likes_received  \n",
              "0                      0          0                   0  \n",
              "1                      0          0                   0  \n",
              "2                      0          0                   0  \n",
              "3                      0          0                   0  \n",
              "4                      0          0                   0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-187002cd-50d2-4c89-a818-6fd6576b834a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2094382</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>266.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1192601</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2083884</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1203168</td>\n",
              "      <td>14</td>\n",
              "      <td>25</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>female</td>\n",
              "      <td>93.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1733186</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>male</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-187002cd-50d2-4c89-a818-6fd6576b834a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-187002cd-50d2-4c89-a818-6fd6576b834a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-187002cd-50d2-4c89-a818-6fd6576b834a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 361
        },
        "id": "piOHNimSOhS8",
        "outputId": "92a50446-9dcf-4f9d-d83e-105af20d9092"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             userid           age       dob_day      dob_year     dob_month  \\\n",
              "count  9.900300e+04  99003.000000  99003.000000  99003.000000  99003.000000   \n",
              "mean   1.597045e+06     37.280224     14.530408   1975.719776      6.283365   \n",
              "std    3.440592e+05     22.589748      9.015606     22.589748      3.529672   \n",
              "min    1.000008e+06     13.000000      1.000000   1900.000000      1.000000   \n",
              "25%    1.298806e+06     20.000000      7.000000   1963.000000      3.000000   \n",
              "50%    1.596148e+06     28.000000     14.000000   1985.000000      6.000000   \n",
              "75%    1.895744e+06     50.000000     22.000000   1993.000000      9.000000   \n",
              "max    2.193542e+06    113.000000     31.000000   2000.000000     12.000000   \n",
              "\n",
              "             tenure  friend_count  friendships_initiated         likes  \\\n",
              "count  99001.000000  99003.000000           99003.000000  99003.000000   \n",
              "mean     537.887375    196.350787             107.452471    156.078785   \n",
              "std      457.649874    387.304229             188.786951    572.280681   \n",
              "min        0.000000      0.000000               0.000000      0.000000   \n",
              "25%      226.000000     31.000000              17.000000      1.000000   \n",
              "50%      412.000000     82.000000              46.000000     11.000000   \n",
              "75%      675.000000    206.000000             117.000000     81.000000   \n",
              "max     3139.000000   4923.000000            4144.000000  25111.000000   \n",
              "\n",
              "       likes_received  mobile_likes  mobile_likes_received     www_likes  \\\n",
              "count    99003.000000  99003.000000           99003.000000  99003.000000   \n",
              "mean       142.689363    106.116300              84.120491     49.962425   \n",
              "std       1387.919613    445.252985             839.889444    285.560152   \n",
              "min          0.000000      0.000000               0.000000      0.000000   \n",
              "25%          1.000000      0.000000               0.000000      0.000000   \n",
              "50%          8.000000      4.000000               4.000000      0.000000   \n",
              "75%         59.000000     46.000000              33.000000      7.000000   \n",
              "max     261197.000000  25111.000000          138561.000000  14865.000000   \n",
              "\n",
              "       www_likes_received  \n",
              "count        99003.000000  \n",
              "mean            58.568831  \n",
              "std            601.416348  \n",
              "min              0.000000  \n",
              "25%              0.000000  \n",
              "50%              2.000000  \n",
              "75%             20.000000  \n",
              "max         129953.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-90573693-f52e-485b-b0b0-ff677dde1f5c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9.900300e+04</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99001.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.597045e+06</td>\n",
              "      <td>37.280224</td>\n",
              "      <td>14.530408</td>\n",
              "      <td>1975.719776</td>\n",
              "      <td>6.283365</td>\n",
              "      <td>537.887375</td>\n",
              "      <td>196.350787</td>\n",
              "      <td>107.452471</td>\n",
              "      <td>156.078785</td>\n",
              "      <td>142.689363</td>\n",
              "      <td>106.116300</td>\n",
              "      <td>84.120491</td>\n",
              "      <td>49.962425</td>\n",
              "      <td>58.568831</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.440592e+05</td>\n",
              "      <td>22.589748</td>\n",
              "      <td>9.015606</td>\n",
              "      <td>22.589748</td>\n",
              "      <td>3.529672</td>\n",
              "      <td>457.649874</td>\n",
              "      <td>387.304229</td>\n",
              "      <td>188.786951</td>\n",
              "      <td>572.280681</td>\n",
              "      <td>1387.919613</td>\n",
              "      <td>445.252985</td>\n",
              "      <td>839.889444</td>\n",
              "      <td>285.560152</td>\n",
              "      <td>601.416348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000008e+06</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1900.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.298806e+06</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>1963.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>226.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.596148e+06</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>1985.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>412.000000</td>\n",
              "      <td>82.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.895744e+06</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>1993.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>675.000000</td>\n",
              "      <td>206.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>81.000000</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>33.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.193542e+06</td>\n",
              "      <td>113.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>2000.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>3139.000000</td>\n",
              "      <td>4923.000000</td>\n",
              "      <td>4144.000000</td>\n",
              "      <td>25111.000000</td>\n",
              "      <td>261197.000000</td>\n",
              "      <td>25111.000000</td>\n",
              "      <td>138561.000000</td>\n",
              "      <td>14865.000000</td>\n",
              "      <td>129953.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90573693-f52e-485b-b0b0-ff677dde1f5c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-90573693-f52e-485b-b0b0-ff677dde1f5c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-90573693-f52e-485b-b0b0-ff677dde1f5c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JVy7E0v8Ovpn",
        "outputId": "04de7027-9a69-459a-a92f-5e490c76071f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 99003 entries, 0 to 99002\n",
            "Data columns (total 15 columns):\n",
            " #   Column                 Non-Null Count  Dtype  \n",
            "---  ------                 --------------  -----  \n",
            " 0   userid                 99003 non-null  int64  \n",
            " 1   age                    99003 non-null  int64  \n",
            " 2   dob_day                99003 non-null  int64  \n",
            " 3   dob_year               99003 non-null  int64  \n",
            " 4   dob_month              99003 non-null  int64  \n",
            " 5   gender                 98828 non-null  object \n",
            " 6   tenure                 99001 non-null  float64\n",
            " 7   friend_count           99003 non-null  int64  \n",
            " 8   friendships_initiated  99003 non-null  int64  \n",
            " 9   likes                  99003 non-null  int64  \n",
            " 10  likes_received         99003 non-null  int64  \n",
            " 11  mobile_likes           99003 non-null  int64  \n",
            " 12  mobile_likes_received  99003 non-null  int64  \n",
            " 13  www_likes              99003 non-null  int64  \n",
            " 14  www_likes_received     99003 non-null  int64  \n",
            "dtypes: float64(1), int64(13), object(1)\n",
            "memory usage: 11.3+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uGcSzBrxOz3k",
        "outputId": "a8ff3577-7b47-401e-d2fe-4812f33a290f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "userid                     0\n",
              "age                        0\n",
              "dob_day                    0\n",
              "dob_year                   0\n",
              "dob_month                  0\n",
              "gender                   175\n",
              "tenure                     2\n",
              "friend_count               0\n",
              "friendships_initiated      0\n",
              "likes                      0\n",
              "likes_received             0\n",
              "mobile_likes               0\n",
              "mobile_likes_received      0\n",
              "www_likes                  0\n",
              "www_likes_received         0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d=data.dropna(inplace=True)\n",
        "print(d)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WNkfPFAbPLgG",
        "outputId": "619db08c-0276-4f00-d76b-fe12cc9b7050"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.drop_duplicates()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "id": "5MMCJ907RKaU",
        "outputId": "9ec78d3e-ec22-40b6-cd72-2fdbb35612e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        userid  age  dob_day  dob_year  dob_month  gender  tenure  \\\n",
              "0      2094382   14       19      1999         11    male   266.0   \n",
              "1      1192601   14        2      1999         11  female     6.0   \n",
              "2      2083884   14       16      1999         11    male    13.0   \n",
              "3      1203168   14       25      1999         12  female    93.0   \n",
              "4      1733186   14        4      1999         12    male    82.0   \n",
              "...        ...  ...      ...       ...        ...     ...     ...   \n",
              "98998  1268299   68        4      1945          4  female   541.0   \n",
              "98999  1256153   18       12      1995          3  female    21.0   \n",
              "99000  1195943   15       10      1998          5  female   111.0   \n",
              "99001  1468023   23       11      1990          4  female   416.0   \n",
              "99002  1397896   39       15      1974          5  female   397.0   \n",
              "\n",
              "       friend_count  friendships_initiated  likes  likes_received  \\\n",
              "0                 0                      0      0               0   \n",
              "1                 0                      0      0               0   \n",
              "2                 0                      0      0               0   \n",
              "3                 0                      0      0               0   \n",
              "4                 0                      0      0               0   \n",
              "...             ...                    ...    ...             ...   \n",
              "98998          2118                    341   3996           18089   \n",
              "98999          1968                   1720   4401           13412   \n",
              "99000          2002                   1524  11959           12554   \n",
              "99001          2560                    185   4506            6516   \n",
              "99002          2049                    768   9410           12443   \n",
              "\n",
              "       mobile_likes  mobile_likes_received  www_likes  www_likes_received  \n",
              "0                 0                      0          0                   0  \n",
              "1                 0                      0          0                   0  \n",
              "2                 0                      0          0                   0  \n",
              "3                 0                      0          0                   0  \n",
              "4                 0                      0          0                   0  \n",
              "...             ...                    ...        ...                 ...  \n",
              "98998          3505                  11887        491                6202  \n",
              "98999          4399                  10592          2                2820  \n",
              "99000         11959                  11462          0                1092  \n",
              "99001          4506                   5760          0                 756  \n",
              "99002          9410                   9530          0                2913  \n",
              "\n",
              "[98826 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-16aaeab7-b07f-4b3a-b449-f56d9ec2546e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2094382</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>266.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1192601</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2083884</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1203168</td>\n",
              "      <td>14</td>\n",
              "      <td>25</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>female</td>\n",
              "      <td>93.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1733186</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>male</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98998</th>\n",
              "      <td>1268299</td>\n",
              "      <td>68</td>\n",
              "      <td>4</td>\n",
              "      <td>1945</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>541.0</td>\n",
              "      <td>2118</td>\n",
              "      <td>341</td>\n",
              "      <td>3996</td>\n",
              "      <td>18089</td>\n",
              "      <td>3505</td>\n",
              "      <td>11887</td>\n",
              "      <td>491</td>\n",
              "      <td>6202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98999</th>\n",
              "      <td>1256153</td>\n",
              "      <td>18</td>\n",
              "      <td>12</td>\n",
              "      <td>1995</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>21.0</td>\n",
              "      <td>1968</td>\n",
              "      <td>1720</td>\n",
              "      <td>4401</td>\n",
              "      <td>13412</td>\n",
              "      <td>4399</td>\n",
              "      <td>10592</td>\n",
              "      <td>2</td>\n",
              "      <td>2820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99000</th>\n",
              "      <td>1195943</td>\n",
              "      <td>15</td>\n",
              "      <td>10</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>111.0</td>\n",
              "      <td>2002</td>\n",
              "      <td>1524</td>\n",
              "      <td>11959</td>\n",
              "      <td>12554</td>\n",
              "      <td>11959</td>\n",
              "      <td>11462</td>\n",
              "      <td>0</td>\n",
              "      <td>1092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99001</th>\n",
              "      <td>1468023</td>\n",
              "      <td>23</td>\n",
              "      <td>11</td>\n",
              "      <td>1990</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>416.0</td>\n",
              "      <td>2560</td>\n",
              "      <td>185</td>\n",
              "      <td>4506</td>\n",
              "      <td>6516</td>\n",
              "      <td>4506</td>\n",
              "      <td>5760</td>\n",
              "      <td>0</td>\n",
              "      <td>756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99002</th>\n",
              "      <td>1397896</td>\n",
              "      <td>39</td>\n",
              "      <td>15</td>\n",
              "      <td>1974</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>397.0</td>\n",
              "      <td>2049</td>\n",
              "      <td>768</td>\n",
              "      <td>9410</td>\n",
              "      <td>12443</td>\n",
              "      <td>9410</td>\n",
              "      <td>9530</td>\n",
              "      <td>0</td>\n",
              "      <td>2913</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>98826 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16aaeab7-b07f-4b3a-b449-f56d9ec2546e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-16aaeab7-b07f-4b3a-b449-f56d9ec2546e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-16aaeab7-b07f-4b3a-b449-f56d9ec2546e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(data['age'],data['dob_month'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "7M8_j7uoRYVX",
        "outputId": "91d7bd86-905d-49f7-d2f7-c1664f1eb431"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "age=data.groupby('age').count()\n",
        "age.plot.bar()\n",
        "plt.ylabel('No.of persons')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "Mh53Lh34U3Or",
        "outputId": "6b993939-f0cd-4a27-cdad-d331e299876b"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=groupby('age')"
      ],
      "metadata": {
        "id": "tGUD-dd8Ywvc"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}